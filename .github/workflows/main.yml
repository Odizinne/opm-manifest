name: Generate Release Info JSON

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows for manual triggering

jobs:
  create-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Fetch Release Info and Generate JSON
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # List of repository API URLs
          
          urls=(
            "https://api.github.com/repos/odizinne/globalmicmute/releases/latest"
            "https://api.github.com/repos/odizinne/bigpicturetv/releases/latest"
          )
          
          # Initialize JSON content
          json_content="["

          for url in "${urls[@]}"; do
            # Fetch the latest release data from the GitHub API
            response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$url")

            # Extract project name, version, and asset URL
            project_name=$(echo $response | jq -r '.url' | awk -F"/" '{print $(NF-3)}')
            version=$(echo $response | jq -r '.tag_name')
            asset_url=$(echo $response | jq -r '.assets[0].url')

            # Append the data to JSON content
            json_content="$json_content{\"project_name\": \"$project_name\", \"version\": \"$version\", \"url\": \"$asset_url\"},"
          done

          # Finalize the JSON array and write it to a file
          json_content="${json_content%,}]"
          echo $json_content | jq '.' > release_info.json

      - name: Commit and Push JSON File
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add release_info.json
          git commit -m "Add generated release_info.json"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
